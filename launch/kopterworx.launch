<launch>

  <arg name="name" default="kopterworx"/>
	<arg name="camera_namespace" default="red"/>
  <arg name="tf_prefix" default="$(arg name)"/>
	<arg name="x" default="0.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="0.5"/>
  <arg name="enable_ground_truth" default="true"/>
	<arg name="enable_velodyne" default="false" />
	<arg name="model" value="$(find ardupilot_gazebo)/models/kopterworx/urdf/kopterworx.urdf.xacro" />
	<arg name="world" default="worlds/empty.world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true"/>
    <arg name="verbose" value="true" />
		<arg name="world_name" value="$(arg world)" />
  </include>

  <!-- send the robot XML to param server -->
	<param name="robot_description" command="
	  $(find xacro)/xacro --inorder $(arg model)
		namespace:=$(arg name)
		enable_velodyne:=$(arg enable_velodyne)
	  "
	/>

	<param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	<!-- push robot_description to factory and spawn robot in gazebo -->
	<node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
	 args="-param robot_description
	       -urdf
	       -x $(arg x)
	       -y $(arg y)
	       -z $(arg z)
	       -model $(arg name)"
	 respawn="false" output="screen" >
	</node>

	<group if="$(arg enable_velodyne)">
    
    <!-- Transform publisher and rviz for velodyne -->
    <node 
            name="velodyne_transform" pkg="tf" 
            type="static_transform_publisher" 
            args="0.08 0. -0.1578 0. 0.1323284641020683 3.141592653589793 $(arg name)/base_link $(arg name)/velodyne 100" >
		</node>

	</group>

</launch>
