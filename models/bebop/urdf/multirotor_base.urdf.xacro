<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Main multirotor link -->
  <xacro:macro name="multirotor_base_macro"
    params="robot_namespace mass body_width body_height mesh_file *inertia">
    <link name="base_link"></link>
    <joint name="base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_link_inertia" />
    </joint>
    <link name="base_link_inertia">
      <inertial>
        <mass value="${mass}" />  <!-- [kg] -->
        <origin xyz="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ardupilot_gazebo/models/bebop/meshes/${mesh_file}"
            scale="0.001 0.001 0.001" />
          <!-- box size="${body_width} ${body_width} ${body_height}"/ --> <!-- [m] [m] [m] -->
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0.0" rpy="0 0 0" />
        <geometry>
          <box size="${body_width} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <!-- IMU -->
    <link name="imu_link">
      <inertial>
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0"
          izz="0.001" />
        <mass value="0.01" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>

    <gazebo reference="imu_link">
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>true</visualize>
        <topic>/bebop/imu</topic>

        <!-- IMU sensor has to be rotated accordint to the NED frame 
             defined in the ArduPilot plugin -->
        <pose>0 0 0 3.141593 0 0</pose>
        
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>/bebop/imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>50.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <!-- IMU joint -->
    <joint name="imu_joint" type="revolute">
      <!--origin xyz="0 0 0" rpy="3.1416 0 0" / -->
      <parent link="base_link" />
      <child link="imu_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    
    <!-- attach multirotor_base_plugin to the base_link -->
    <gazebo>
      <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
        <robotNamespace>$(arg namespace)</robotNamespace>
        <linkName>base_link</linkName>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Rotor joint and link -->
  <xacro:macro name="vertical_rotor"
    params="robot_namespace suffix direction motor_constant moment_constant parent mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color *origin *inertia">
    <joint name="rotor_${motor_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <!-- TODO(ff): not currently set because it's not yet supported -->
      <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
      <parent link="${parent}" />
      <child link="rotor_${motor_number}" />

    </joint>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
    <link name="rotor_${motor_number}">
      <inertial>
        <mass value="${mass_rotor}" /> <!-- [kg] -->
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <!-- <cylinder length="0.005" radius="${radius_rotor}"/> --> <!-- [m] -->
          <mesh filename="package://ardupilot_gazebo/models/bebop/meshes/propeller_${direction}.dae"
            scale="0.00055 0.00055 0.00055" />
          <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.005" radius="${radius_rotor}" /> <!-- [m] -->
        </geometry>
      </collision>
    </link>

    <gazebo>
      <plugin name="${suffix}_motor_model" filename="librotors_gazebo_motor_model.so">
        <jointName>rotor_${motor_number}_joint</jointName>
        <linkName>rotor_${motor_number}</linkName>
        <turningDirection>${direction}</turningDirection>
        <timeConstantUp>${time_constant_up}</timeConstantUp>
        <timeConstantDown>${time_constant_down}</timeConstantDown>
        <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
        <motorConstant>${motor_constant}</motorConstant>
        <momentConstant>${moment_constant}</momentConstant>
        <commandTopic>${robot_namespace}/command/motors</commandTopic>
        <motorNumber>${motor_number}</motorNumber>
        <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
        <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
        <motorVelocityTopic>${robot_namespace}/motor_vel/${motor_number}</motorVelocityTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>

    <gazebo reference="rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>

  </xacro:macro>
   
  <xacro:macro name="ardupilot" 
    params="imu_topic control_topic imu_sensor_name rotor_0_joint rotor_1_joint rotor_2_joint rotor_3_joint">
     <gazebo>
        <plugin name="arducopter_plugin" filename="libArduPilotPlugin.so">
        <imuTopicName>${imu_topic}</imuTopicName>
        <controlTopicName>${control_topic}</controlTopicName>
        <fdm_addr>127.0.0.1</fdm_addr>
        <fdm_port_in>9002</fdm_port_in>
        <fdm_port_out>9003</fdm_port_out>
        <!--
            Require by APM :
            Only change model and gazebo from XYZ to XY-Z coordinates
        -->
        <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
        <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
        <imuName>${imu_sensor_name}</imuName>
        <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
        <!-- TODO: Remove this control parameters-->
        <control channel="0">
        <!--
            incoming control command [0, 1]
            so offset it by 0 to get [0, 1]
            and divide max target by 1.
            offset = 0
            multiplier = 838 max rpm / 1 = 838
          -->
          <type>VELOCITY</type>
          <offset>0</offset>
          <p_gain>0.20</p_gain>
          <i_gain>0</i_gain>
          <d_gain>0</d_gain>
          <i_max>0</i_max>
          <i_min>0</i_min>
          <cmd_max>3</cmd_max>
          <cmd_min>-3</cmd_min>
          <jointName>${rotor_1_joint}</jointName>
          <multiplier>600</multiplier>
          <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
        </control>
        <control channel="1">
          <type>VELOCITY</type>
          <offset>0</offset>
          <p_gain>0.20</p_gain>
          <i_gain>0</i_gain>
          <d_gain>0</d_gain>
          <i_max>0</i_max>
          <i_min>0</i_min>
          <cmd_max>3</cmd_max>
          <cmd_min>-3</cmd_min>
          <jointName>${rotor_3_joint}</jointName>
          <multiplier>600</multiplier>
          <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
        </control>
        <control channel="2">
          <type>VELOCITY</type>
          <offset>0</offset>
          <p_gain>0.20</p_gain>
          <i_gain>0</i_gain>
          <d_gain>0</d_gain>
          <i_max>0</i_max>
          <i_min>0</i_min>
          <cmd_max>3</cmd_max>
          <cmd_min>-3</cmd_min>
          <jointName>${rotor_0_joint}</jointName>
          <multiplier>-600</multiplier>
          <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
        </control>
        <control channel="3">
          <type>VELOCITY</type>
          <offset>0</offset>
          <p_gain>0.20</p_gain>
          <i_gain>0</i_gain>
          <d_gain>0</d_gain>
          <i_max>0</i_max>
          <i_min>0</i_min>
          <cmd_max>3</cmd_max>
          <cmd_min>-3</cmd_min>
          <jointName>${rotor_2_joint}</jointName>
          <multiplier>-600</multiplier>
          <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
        </control>
      </plugin>
    </gazebo>
  </xacro:macro>


  <!-- Camera macro. Adds a box representing a camera below the UAV
  
  @param camera_link Length of the camera box
  @param camera_mass Mass of the camera 
  @param parent Parent link on which the camera will be fixed
  @param *origin Block argument defining the origin of the camera with 
  reference to the parent link.
  @param *inertia Block argument defining camera inertia.
  -->
  <xacro:macro name="cam" params="namespace camera_link camera_mass parent *origin *inertia">

    <!-- Camera link -->
    <link name="camera_box">

      <!--collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_link} ${camera_link} ${camera_link}"/>
        </geometry>
      </collision-->

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_link} ${camera_link} ${camera_link}"/>
        </geometry>
        <material name="red"/>
      </visual>

      <inertial>
        <mass value="${camera_mass}" />
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

    <!-- Camera joint with reference to the parent link -->
    <joint name="camera_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="camera_box"/>
    </joint>

    <!-- camera -->
    <gazebo reference="camera_box">
      <sensor type="depth" name="camera">
        <update_rate>30.0</update_rate>
        
        <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/${namespace}/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/${namespace}/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/${namespace}/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/${namespace}/camera/depth_registered/points</pointCloudTopicName>
          <frameName>camera</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>

      </sensor>
    </gazebo>

  </xacro:macro>
  
</robot>
